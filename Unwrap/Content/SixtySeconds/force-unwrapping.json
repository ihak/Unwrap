{
    "title": "Force unwrapping",
    "postscript": "When you read a value from a dictionary, you're given back an optional because the key you requested might not exist.",
    "reviewType": "multipleSelection",
    "question": "Which of these won't crash your code when they are run?",
    "hint": "If you try to force unwrap an optional that holds nil, your app will crash.",
    "syntaxHighlighting": true,
    "correct": [
        "func title(for page: Int) -> String? {\n\tguard page >= 1 else {\n\t\treturn nil\n\t}\n\tlet pageCount = 132\n\tif page < pageCount {\n\t\treturn \"Page \\(page)\"\n\t} else {\n\t\treturn nil\n\t}\n}\nlet pageTitle = title(for: 16)!",
        "struct User {\n\tvar name: String?\n\tvar age: Int?\n}\nlet taylor = User(name: \"Taylor\", age: 26)\nlet taylorAge = taylor.age!",
        "func describe(array: [String]?) {\n\tlet unwrapped = array!\n\tprint(\"The array has \\(unwrapped.count) items.\")\n}\ndescribe(array: [])",
        "let legoBricksSold: Int? = 400_000_000_000\nlet numberSold = legoBricksSold!",
        "func league(for skillLevel: Int) -> Int? {\n\tswitch skillLevel {\n\tcase 1:\n\t\tfallthrough\n\tcase 2:\n\t\treturn 3\n\tcase 3:\n\t\treturn 2\n\tcase 4:\n\t\treturn 1\n\tdefault:\n\t\treturn nil\n\t}\n}\nlet allocatedLeague = league(for: 3)!",
        "let age: Int = 21\nlet allowedMessage: String? = age >= 21 ? \"Welcome!\" : nil\nlet result = allowedMessage!"
    ],
    "wrong": [
        "let score = \"babylon5\"\nlet scoreInt = Int(score)!",
        "struct Starship {\n\tvar name: String? = \"Unknown\"\n\tvar maxWarpSpeed: Double?\n}\nlet voyager = Starship()\nlet maxWarp = voyager.maxWarpSpeed!",
        "let password: String? = nil\nlet unwrappedPassword = password!",
        "func goals(for player: String) -> Int? {\n\tprint(\"Sorry, the system is down right now.\")\n\treturn nil\n}\nlet harryGoals = goals(for: \"Harry Kane\")!",
        "class Player {\n\tvar name: String = \"Anonymous\"\n\tvar salary: Int?\n}\nlet player = Player()\nlet salary = player.salary!",
        "func population(of city: String) -> Int? {\n\tif city == \"Paris\" {\n\t\treturn 2_200_000\n\t}\n\treturn nil\n}\nlet pop = population(of: \"Tokyo\")!"
    ]
}
