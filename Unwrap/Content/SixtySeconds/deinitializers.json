{
    "title": "Deinitializers",
    "postscript": "The <code>deinit</code> method doesn't have parentheses after it, because it never takes parameters. So, always write <code>deinit</code> rather than <code>deinit()</code>.",
    "reviewType": "singleSelection",
    "question": "This code will print a message when an instance of the type is destroyed – true or false?",
    "hint": "Structs cannot have deinitializers.",
    "syntaxHighlighting": true,
    "correct": [
        "class IceCream {\n\tdeinit {\n\t\tprint(\"No more icecream :(\")\n\t}\n}",
        "class Job {\n\tdeinit {\n\t\tprint(\"I quit!\")\n\t}\n}",
        "class Lightsaber {\n\tdeinit {\n\t\tprint(\"Fssshhp!\")\n\t}\n}",
        "class Firefly {\n\tdeinit {\n\t\tprint(\"I'm still annoyed that this was cancelled.\")\n\t}\n}",
        "class MagicSpell {\n\tdeinit {\n\t\tprint(\"Good job, Hermione!\")\n\t}\n}",
        "class DisneyMovie {\n\tdeinit {\n\t\tprint(\"Relax, there'll be another in a year.\")\n\t}\n}"
    ],
    "wrong": [
        "class Meal {\n\tdealloc {\n\t\tprint(\"Please send over the bill.\")\n\t}\n}",
        "class Election {\n\tinit() {\n\t\tprint(\"And the winner is...\")\n\t}\n}",
        "struct Olympics {\n\tfunc deinit() {\n\t\tprint(\"And now for the closing ceremony.\")\n\t}\n}",
        "struct Fairytale {\n\tdeinit {\n\t\tprint(\"And they lived happily ever after.\")\n\t}\n}",
        "class PhoneCall {\n\tfunc deinit {\n\t\tprint(\"Bye!\")\n\t}\n}",
        "class MarketingFlyer {\n\tdeinit() {\n\t\tprint(\"You're going straight into recycling.\")\n\t}\n}"
    ]
}
