{
    "title": "Protocol-oriented programming",
    "postscript": "Protocol extensions are default implementations of methods, but your types can still provide their own versions.",
    "reviewType": "multipleSelection",
    "question": "Which of these are true about protocols?",
    "hint": "Protocols never provide implementations; that's done by extensions.",
    "syntaxHighlighting": false,
    "correct": [
        "Protocols specify what methods and properties conforming types must have.",
        "You can create one protocol by inheriting from others.",
        "You can write extensions for protocols to provide default implementations.",
        "Protocols can mark properties as read-only or read-write.",
        "Each type can conform to as many protocols as you want.",
        "You can write extensions for Swift's built-in protocols."
    ],
    "wrong": [
        "Protocols can contain method implementations.",
        "Properties must always be read-write.",
        "Protocols can define their own protocols internally.",
        "Only structs can conform to protocols.",
        "Each data type can conform to only one protocol.",
        "You can write extensions for protocols that don't exist."
    ]
}
